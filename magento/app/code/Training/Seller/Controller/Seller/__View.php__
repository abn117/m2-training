<?php

namespace Training\Seller\Controller\Seller;

use Magento\Framework\App\Action\Action;
use Magento\Framework\App\Action\Context;
use Magento\Framework\App\Action\HttpGetActionInterface;
use Magento\Framework\Controller\ResultFactory;
use Magento\Framework\Controller\Result\Raw as RawResult;
use Magento\Framework\Exception\NoSuchEntityException;
use Magento\Framework\Exception\NotFoundException;
use Training\Seller\Api\SellerRepositoryInterface;
use Training\Seller\Model\Seller;

class View extends Action implements HttpGetActionInterface
{
    private SellerRepositoryInterface $sellerRepository;

    public function __construct(Context $context, SellerRepositoryInterface $sellerRepository)
    {
        parent::__construct($context);
        $this->sellerRepository = $sellerRepository;
    }

    public function execute()
    {
        $identifier = trim($this->getRequest()->getParam('identifier'));
        dd($identifier);
        if (!$identifier) {
            throw new NotFoundException(__('The identifier is missing.'));
        }

        try {
            /** @var Seller $seller */
            $seller = $this->sellerRepository->getIdentifier($identifier);
        } catch (NoSuchEntityException $e) {
            throw new NotFoundException(__('The identifier does not exist.'));
        }

        $html = '<h1>' . $seller->getName() . '</h1><hr/>';
        $html .= '<p>#' . $seller->getIdentifier() . '</p>';
        $html .= '<hr/><a href="/sellers.html">' . __('Back to the list') . '</a>';

        /** @var RawResult $result */
        $result = $this->resultFactory->create(ResultFactory::TYPE_RAW);
        $result->setContents($html);

        return $result;
    }
}
